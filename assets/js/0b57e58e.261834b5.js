"use strict";(self.webpackChunksmooth=self.webpackChunksmooth||[]).push([[3357],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>u});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var l=n.createContext({}),c=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(a),u=o,d=m["".concat(l,".").concat(u)]||m[u]||h[u]||r;return a?n.createElement(d,i(i({ref:t},p),{},{components:a})):n.createElement(d,i({ref:t},p))}));function u(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=a.length,i=new Array(r);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<r;c++)i[c]=a[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},7985:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var n=a(7462),o=(a(7294),a(3905));const r={},i="Scenarios",s={unversionedId:"design/scenario",id:"design/scenario",title:"Scenarios",description:"This section, which describes some typical scenarios, is copied from the design doc for completeness.",source:"@site/docs/design/scenario.md",sourceDirName:"design",slug:"/design/scenario",permalink:"/flutter_smooth/design/scenario",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_smooth/tree/master/website/docs/design/scenario.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Target problems",permalink:"/flutter_smooth/design/target"},next:{title:"Limitations",permalink:"/flutter_smooth/design/limit"}},l={},c=[],p={toc:c};function h(e){let{components:t,...a}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"scenarios"},"Scenarios"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This section, which describes some typical scenarios, is copied from the design doc for completeness.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"A")," ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/flutter/flutter/blob/master/dev/benchmarks/macrobenchmarks/lib/src/list_text_layout.dart"},(0,o.kt)("strong",{parentName:"a"},"test case"))," ",(0,o.kt)("strong",{parentName:"li"},"in the framework"),", pointed out by @dnfield: ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/flutter/flutter/issues/101227#issuecomment-1247641562"},"He said"),', this ends up being janky because layout gets expensive for all that text (on a lower end phone it can easily take 20-30+ms just to layout all the text there, and the ListTile is a little deceptive because Material introduces expense - this is the kind of thing we want to figure out how to break up "automatically").'),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Bytedance\u2019s apps"),": Infra team reports that they see such janks (around ",(0,o.kt)("a",{parentName:"li",href:"https://discord.com/channels/608014603317936148/608021234516754444/1021980287787352125"},"here"),"). In addition, the infra team (Nayuta403, JsouLiang, xanahopper, wangying3426, etc) seems to have interest in ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/flutter/flutter/issues/101227"},"my issue"),", ",(0,o.kt)("a",{parentName:"li",href:"https://discord.com/channels/608014603317936148/1021987751710699632"},"chatted a lot")," on Discord discussing it, and proposing ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/flutter/flutter/issues/101227#issuecomment-1249172293"},"build-based methods")," as well as ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/flutter/flutter/issues/110063"},"thread-based methods")," to solve build/layout slowness - this surely will not happen if it were not a problem for Bytedance."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"All apps using")," ",(0,o.kt)("a",{parentName:"li",href:"https://pub.dev/packages/keframe"},(0,o.kt)("strong",{parentName:"a"},"keframe")),": Keframe is a library to optimize such janks (with comparison below), with 93% popularity on pub.dev and 741 stars on GitHub. If there is no such jank, I guess the package will have no users."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Alibaba\u2019s apps:")," According to ",(0,o.kt)("a",{parentName:"li",href:"https://developer.aliyun.com/article/783168"},"a blog")," from Alibaba, and another similar ",(0,o.kt)("a",{parentName:"li",href:"https://juejin.cn/post/6921902712107991054"},"blog")," by UC (in Alibaba), they mentioned that, when scrolling ListViews, \u201cthe build and layout of a newly created item in ListView usually takes a long time, maybe more than ten milliseconds, even dozens of milliseconds\u201d. And \u201cespecially the situation when needing to build multiple items in one frame, they are the main cause of jank\u201d. (P.S. Their rasterization is said to be \u201c... page B is complex, it takes 7-10ms to rasterize, and once in a while more than 10ms.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Really slow devices"),": There exist many slow, slower, and slower-than-slower devices in the world. Without this proposal, a Flutter app must be janky when running on devices beneath a certain computation power threshold; with the proposal, they will still be smooth, or at least such threshold is lowered by a magnitude."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Enter-page transition"),": Every app needs to enter pages. It is almost inevitable that the page contains complex content to display, and it is also common that a page may need heavy synchronous computation for initialization. The proposal allows it to contain arbitrarily complex content and arbitrarily heavy sync computation with 60FPS transition. Bytedance also showed ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/flutter/flutter/issues/110063#issuecomment-1223744653"},"such a case"),"."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ListView scrolling"),": A lot of apps have scrolling pages, and it is common to have heavy ListView children, such as a beautiful card with decorations and text. When scrolling, users want to achieve 60FPS even if those children are heavy to build/layout."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Locality"),": @gaaclarke ",(0,o.kt)("a",{parentName:"li",href:"https://discord.com/channels/608014603317936148/608021234516754444/1022292715221831680"},"said that"),", a few months ago ",(0,o.kt)("a",{parentName:"li",href:"https://discord.com/channels/608014603317936148/608021234516754444/1022292715221831680"},"he looked at")," the build/layout performance, and the thing that might be holding back layout / build is locality which will be hard to fix, with more guesses ",(0,o.kt)("a",{parentName:"li",href:"https://discord.com/channels/608014603317936148/608021234516754444/1022296432738320454"},"here"),". (The guess will be fixed by this proposal.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Heavy sync computation"),": A little portion of real-world users may have to do heavy sync computation inside initState within the main isolate, because the data is not transferable or too big to send to a second isolate. (This exists, but is not the main target case that the proposal is going to solve.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Dynamic usage"),": There are several dynamic execution engines on Flutter, reported from blogs of some companies. Theoretically, such dynamic approaches seem to be slower than the classical AOT, so they tend to have slow build/layout phase, while the other stages such as rasterization are not slowed down, making this proposal suitable for such cases. (I personally use none, so no empirical data.)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Implicit scenarios"),": If I understand correctly, googlers (@Hixie, @dnfield, @JonahWilliams, @gaaclarke) and bytedancers (@JsouLiang, @Nayuta) have had some discussions and experiments around solving this problem, so the problem just exists. (See ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/flutter/flutter/issues/101227#issuecomment-1249961627"},"here")," and ",(0,o.kt)("a",{parentName:"li",href:"https://discord.com/channels/608014603317936148/608021234516754444/1022292715221831680"},"here")," for the chat history links)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Non-optimal app code"),": Scenarios above mainly focus on the cases when it janks even though the code is already optimal. On the other hand, in the real world, many apps have non-optimal code in terms of performance. They could spend time digging and optimizing the app (and Flutter provides a great doc for that), but this proposal may be able to serve as a drop-in solution, so no developer time needs to be spent on performance optimization.")))}h.isMDXComponent=!0}}]);