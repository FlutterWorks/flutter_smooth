"use strict";(self.webpackChunksmooth=self.webpackChunksmooth||[]).push([[1304],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(r),h=n,f=m["".concat(s,".").concat(h)]||m[h]||d[h]||o;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5615:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=r(7462),n=(r(7294),r(3905));const o={},i="Gather data",l={unversionedId:"benchmark/gather-data",id:"benchmark/gather-data",title:"Gather data",description:"Record video",source:"@site/docs/benchmark/gather-data.md",sourceDirName:"benchmark",slug:"/benchmark/gather-data",permalink:"/flutter_smooth/benchmark/gather-data",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_smooth/tree/master/website/docs/benchmark/gather-data.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/flutter_smooth/benchmark/setup"},next:{title:"Analyze",permalink:"/flutter_smooth/benchmark/analyze/"}},s={},c=[{value:"Record video",id:"record-video",level:2},{value:"Record timeline tracing",id:"record-timeline-tracing",level:2}],p={toc:c};function d(e){let{components:t,...o}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"gather-data"},"Gather data"),(0,n.kt)("h2",{id:"record-video"},"Record video"),(0,n.kt)("p",null,"To get most real results, I use the camera of a ",(0,n.kt)("em",{parentName:"p"},"second")," phone to record a video of the testing device. For example:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_smooth_blob/blob/master/video/list_view/raw_smooth.mp4"},(0,n.kt)("img",{alt:"gather_data_raw_video",src:r(5789).Z,width:"785",height:"442"}))),(0,n.kt)("p",null,"After getting a video (e.g. ",(0,n.kt)("inlineCode",{parentName:"p"},".mp4"),"), the following commands can be utilized to break it into frames. Each frame will become a photo (",(0,n.kt)("inlineCode",{parentName:"p"},".jpg"),"), and a timestamp extracted from the video intrinsitc information is added to the left-top corner of the extracted frame."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"ffmpeg -i path/to/your/video.mp4 -vsync 0 -frame_pts true -vf drawtext=fontfile=/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf:fontsize=80:text='%{pts}':fontcolor=white@0.8:x=7:y=7 ~/temp/video_frames/output_%04d.jpg\n")),(0,n.kt)("p",null,"(The ",(0,n.kt)("inlineCode",{parentName:"p"},"video_to_frame.py")," does the same job as the command above.)"),(0,n.kt)("p",null,"For example, (part of) the result is as follows. We will mainly analyze the parts of the video from pointer-down to scroll-end later."),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"gather_data_video_frames",src:r(2598).Z,width:"1649",height:"721"})),(0,n.kt)("p",null,"Why use a second camera: If we use screen recording on the testing device, it can bias the result because the recording itself takes CPU and GPU. Moreover, the recorded screen may not be equivalent to what a user really percepts by eyes."),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"When debugging raw videos, it may be helpful to add some small headers that change its content to a great extent in every frame, such as ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/fzyzcjy/flutter_smooth/blob/4920f6fa00ef856f238554bbdd2ec2b44e6b54b7/packages/smooth/example/lib/example_list_view/example_list_view_page.dart#L263"},"this one"),". With that, we can easily spot, for example, whether there is really a jank (when the debug header is unchanged in two sibling video frames) or a bug in scrolling logic (when the header changes in two sibling frames but the ListView content is not shifted).")),(0,n.kt)("h2",{id:"record-timeline-tracing"},"Record timeline tracing"),(0,n.kt)("p",null,"I also record the timeline tracing data, which provide rich insights. "),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Run with endless tracing buffer, i.e. with ",(0,n.kt)("inlineCode",{parentName:"li"},"--endless-trace-buffer")," flag. For example, ",(0,n.kt)("inlineCode",{parentName:"li"},"flutter run --profile --endless-trace-buffer"),"."),(0,n.kt)("li",{parentName:"ol"},"Perform all interactions with the app."),(0,n.kt)("li",{parentName:"ol"},"Tap ",(0,n.kt)("inlineCode",{parentName:"li"},"v")," in the shell to open DevTool."),(0,n.kt)("li",{parentName:"ol"},"Tap ",(0,n.kt)("a",{parentName:"li",href:"https://docs.flutter.dev/development/tools/devtools/performance#import-and-export"},"download")," in DevTool panel to get somthing like ",(0,n.kt)("inlineCode",{parentName:"li"},"dart_devtools_2022-10-16_09_54_55.141.json"),"."),(0,n.kt)("li",{parentName:"ol"},"Run ",(0,n.kt)("inlineCode",{parentName:"li"},"scripts/timeline/enhance.py"),', which synthesizes some "fake" events such as "Jank", so that we can easily spot them in the timeline.'),(0,n.kt)("li",{parentName:"ol"},"The file can be opened in ",(0,n.kt)("inlineCode",{parentName:"li"},"chrome://tracing"),".")),(0,n.kt)("p",null,"We will use automatic scripts later to enhance it."),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"Must perform all interactions ",(0,n.kt)("strong",{parentName:"p"},"before")," (not after) opening DevTool. Empirically, I observe large performance drop after DevTool is opened.")),(0,n.kt)("p",null,"Sample result:"),(0,n.kt)("p",null,(0,n.kt)("img",{src:r(1523).Z,width:"1827",height:"823"})))}d.isMDXComponent=!0},5789:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/gather_data_raw_video-bc48cdf279543c2c4879628ecf3025a2.png"},1523:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/gather_data_tracing_example-b62d48e1829e80bc7913f438a6bf4d6f.png"},2598:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/gather_data_video_frames-433233ee8a5c9c6046e4e231bb810778.png"}}]);