"use strict";(self.webpackChunksmooth=self.webpackChunksmooth||[]).push([[7349],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,h=m["".concat(s,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4057:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i="a. Drop-in replacement",l={unversionedId:"usage/drop-in",id:"usage/drop-in",title:"a. Drop-in replacement",description:'For some common scenarios, just add six letters - the "Smooth" prefix - and that\'s all!',source:"@site/docs/usage/drop-in.md",sourceDirName:"usage",slug:"/usage/drop-in",permalink:"/flutter_smooth/usage/drop-in",draft:!1,editUrl:"https://github.com/fzyzcjy/flutter_smooth/tree/master/website/docs/usage/drop-in.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/flutter_smooth/usage/"},next:{title:"b. Flexible builder",permalink:"/flutter_smooth/usage/builder"}},s={},p=[{value:"<code>SmoothListView</code> replacing <code>ListView</code>",id:"smoothlistview-replacing-listview",level:2},{value:"Page transition animations",id:"page-transition-animations",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"a-drop-in-replacement"},"a. Drop-in replacement"),(0,a.kt)("p",null,'For some common scenarios, just add six letters - the "Smooth" prefix - and that\'s all!'),(0,a.kt)("admonition",{title:"package current status",type:"info"},(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},"The infra part is already implemented (hard, took me a month). The drop-in part and demo, which is mainly engineering work utilizing the exposed infra API, still has many improveable things, since these are the highest-level things and I spent my time mainly on the infra part. Feel free to issue and PR!"),(0,a.kt)("li",{parentName:"ul"},"Need to wait for all PRs to Flutter to be merged and next Flutter release. (PR status ",(0,a.kt)("a",{parentName:"li",href:"https://fzyzcjy.github.io/flutter_smooth/insight/status"},"here"),")"))),(0,a.kt)("h2",{id:"smoothlistview-replacing-listview"},(0,a.kt)("inlineCode",{parentName:"h2"},"SmoothListView")," replacing ",(0,a.kt)("inlineCode",{parentName:"h2"},"ListView")),(0,a.kt)("p",null,"For example, before:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"ListView.builder(\n  itemCount: 123,\n  itemBuilder: (context, index) => MyItem(),\n)\n")),(0,a.kt)("p",null,"After:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"SmoothListView.builder(\n  itemCount: 123,\n  itemBuilder: (context, index) => MyItem(),\n)\n")),(0,a.kt)("p",null,"Then, the ListView scrolling will be smooth, even if you have very heavy content to build and layout."),(0,a.kt)("h2",{id:"page-transition-animations"},"Page transition animations"),(0,a.kt)("p",null,"For example, use ",(0,a.kt)("inlineCode",{parentName:"p"},"SmoothMaterialPageRoute")," to replace ",(0,a.kt)("inlineCode",{parentName:"p"},"MaterialPageRoute"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"SmoothPageRouteBuilder")," in place of ",(0,a.kt)("inlineCode",{parentName:"p"},"PageRouteBuilder"),", etc. Then, the enter-page animation will be smooth, no matter how heavy the new page is to build and layout."),(0,a.kt)("p",null,"A concrete example - before:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Navigator.push(context, MaterialPageRoute(builder: MyFancyPage()));\n")),(0,a.kt)("p",null,"After:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-dart"},"Navigator.push(context, SmoothMaterialPageRoute(builder: MyFancyPage()));\n")))}c.isMDXComponent=!0}}]);